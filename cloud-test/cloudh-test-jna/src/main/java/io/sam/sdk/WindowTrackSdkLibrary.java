package io.sam.sdk;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.win32.StdCallLibrary;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>GXX_NSPP_TRACK_SDK</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface WindowTrackSdkLibrary extends StdCallLibrary {
	public static final String JNA_LIBRARY_NAME = "GXX_NSPP_TRACK_SDK";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(WindowTrackSdkLibrary.JNA_LIBRARY_NAME);
	public static final WindowTrackSdkLibrary INSTANCE = (WindowTrackSdkLibrary)Native.loadLibrary(WindowTrackSdkLibrary.JNA_LIBRARY_NAME, WindowTrackSdkLibrary.class);
	/**
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:35</i><br>
	 * enum values
	 */
	public static interface EN_NSPP_ERROT_CODE {
		/**
		 * \u6210\u529f<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:36</i>
		 */
		public static final int NSPP_SDK_SUCCEED = 0;
		/**
		 * \u672a\u77e5\u9519\u8bef<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:37</i>
		 */
		public static final int NSPP_SDK_UNKNOWN_ERROR = 1;
		/**
		 * \u8f93\u5165\u53c2\u6570\u6709\u8bef<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:38</i>
		 */
		public static final int NSPP_SDK_INVAILD_PARAM = 2;
		/**
		 * \u7b97\u6cd5\u5e93\u672a\u6ce8\u518c/\u8fc7\u671f<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:39</i>
		 */
		public static final int NSPP_SDK_UNREGISTERED = 3;
		/**
		 * \u4e0d\u5b58\u5728<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:40</i>
		 */
		public static final int NSPP_SDK_NO_EXIST = 4;
		/**
		 * \u7cfb\u7edf\u8d44\u6e90\u4e0d\u8db3<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:41</i>
		 */
		public static final int NSPP_SDK_OUTOF_RES = 5;
		/**
		 * \u672a\u52a0\u8f7d\u6a21\u578b<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:42</i>
		 */
		public static final int NSPP_SDK_UNLOADMODEL = 6;
		/**
		 * \u672a\u5b9e\u73b0<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:43</i>
		 */
		public static final int NSPP_SDK_UNIMPLEMENTATION = 7;
		/**
		 * \u672a\u8bbe\u7f6e\u6709\u6548\u4fe1\u606f<br>
		 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:44</i>
		 */
		public static final int NSPP_SDK_UNSETVALUE = 8;
	};
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_GetVersion(char*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:52</i><br>
	 * @deprecated use the safer methods {@link #GXX_NSPP_TRACK_GetVersion(ByteBuffer)} and {@link #GXX_NSPP_TRACK_GetVersion(Pointer)} instead
	 */
	@Deprecated 
	int GXX_NSPP_TRACK_GetVersion(Pointer version_num);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_GetVersion(char*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:52</i>
	 */
	int GXX_NSPP_TRACK_GetVersion(ByteBuffer version_num);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_Init(const char*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:59</i><br>
	 * @deprecated use the safer methods {@link #GXX_NSPP_TRACK_Init(String)} and {@link #GXX_NSPP_TRACK_Init(Pointer)} instead
	 */
	@Deprecated 
	int GXX_NSPP_TRACK_Init(Pointer lic_path);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_Init(const char*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:59</i>
	 */
	int GXX_NSPP_TRACK_Init(String lic_path);
	/**
	 * Original signature : <code>void GXX_NSPP_TRACK_CleanUp()</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:66</i>
	 */
	void GXX_NSPP_TRACK_CleanUp();
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_Create(long long*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:74</i><br>
	 * @deprecated use the safer methods {@link #GXX_NSPP_TRACK_Create(LongBuffer)} and {@link #GXX_NSPP_TRACK_Create(LongByReference)} instead
	 */
	@Deprecated 
	int GXX_NSPP_TRACK_Create(LongByReference handle);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_Create(long long*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:74</i>
	 */
	int GXX_NSPP_TRACK_Create(LongBuffer handle);
	/**
	 * Original signature : <code>void GXX_NSPP_TRACK_Release(long long)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:82</i>
	 */
	void GXX_NSPP_TRACK_Release(long handle);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_SetRegionConnectInfo(long long, const char*, int)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:92</i><br>
	 * @deprecated use the safer methods {@link #GXX_NSPP_TRACK_SetRegionConnectInfo(long, String, int)} and {@link #GXX_NSPP_TRACK_SetRegionConnectInfo(long, Pointer, int)} instead
	 */
	@Deprecated 
	int GXX_NSPP_TRACK_SetRegionConnectInfo(long handle, Pointer szJsonParm, int nJsonLen);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_SetRegionConnectInfo(long long, const char*, int)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:92</i>
	 */
	int GXX_NSPP_TRACK_SetRegionConnectInfo(long handle, String szJsonParm, int nJsonLen);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_PathSearch(long long, const char*, int, char*, int*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:104</i><br>
	 * @deprecated use the safer methods {@link #GXX_NSPP_TRACK_PathSearch(long, String, int, ByteBuffer, IntBuffer)} and {@link #GXX_NSPP_TRACK_PathSearch(long, Pointer, int, Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int GXX_NSPP_TRACK_PathSearch(long handle, Pointer szInJsonParm, int nInJsonLen, Pointer szOutJsonParm, IntByReference nOutJsonLen);
	/**
	 * Original signature : <code>int GXX_NSPP_TRACK_PathSearch(long long, const char*, int, char*, int*)</code><br>
	 * <i>native declaration : GXX_NSPP_TRACK_SDK.h:104</i>
	 */
	int GXX_NSPP_TRACK_PathSearch(long handle, String szInJsonParm, int nInJsonLen, ByteBuffer szOutJsonParm, IntBuffer nOutJsonLen);
}
